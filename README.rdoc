= devise_facebook_open_graph

The goal of this gem is to give Devise the ability to authorize users based if they are connected to Facebook or not.
It relays on connection to Facebook set up via the Facebook JavaScript SDK. Maybe devise facebook js sdk connectable
should be a better name for this gem ;-)

== Warning

I guess I should start with a small warning: Right now, this gem is kinda a fast-written prototype for me. Don't expect anything to
work ;-) ..Even though committed code do work for me in my Rails 3 beta 3 application :-) I have managed to authenticate users which
sign in via Facebook's JavaScript SDK and I guess this code might be useful to others too. Sadly, I haven't written any specs while
writing this code. This is not 100% complete code either. For instance, creating users based on facebook connection is not finished,
although I guess it will be soon.



= How to get started

== Get facebook credentials, add ids and keys to a configuration file

If you haven't done so already, create a facebook application so you'll acquire an application id, secret and an API key.
You can register applications here: http://www.facebook.com/developers/.

DeviseFacebookOpenGraph provides a class for easy access to configuration values. These are by default read from
Rails.root/config/facebook.yml which should look something like this:

  production: &production
    application_id: ""
    api_key: ""
    application_secret: ""
    
  development:
    <<: *production


== Add facebook user id column to your users table

  class CreateUsers < ActiveRecord::Migration
    def self.up
      create_table :users do |t|
        # ...other definitions here..

        t.facebook_open_graph_authenticatable
      end

      add_index :users, User.facebook_uid_field, :unique => true
    end

    
    def self.down
      drop_table :users
    end
  end


== Add Facebook SDK initializer HTML and JavaScript

The next thing we'll be doing are adding Facebook's JavaScript SDK and initialize it. This should be added
at the bottom of the page, before </body>. Add it with the helper <tt>facebook_init_javascript_sdk</tt>. I guess
more options to this one will come later.

== Add Facebook login button to your page

This can be done in different ways. One way is to use the fbml tag <tt>fb:login-button</tt>. See
http://developers.facebook.com/docs/authentication/, single sign-on section for more information.

== Last step...

Once a user has clicked your login button a cookie will be set with name fbs_<your_application_id>. When this is
set and Warden tries the authentication strategy which this gem provides it will parse the cookie content, find
the user's facebook uid and look that up in your users' table. If found, the user is authenticated.

== How to sign out users?

Facebook connected users are signed out when they sign out of Facebook. You can log a user out by calling <tt>FB.logout()</tt>
from your JavaScript.


= TODO
* Add/provide hooks in devise models which are called when user's are created based on a facebook account. Yield access to user's open graph API to allow extraction of data.
* Guess some testing should be nice ;-) 


== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Thorbj√∏rn Hermansen. See LICENSE for details.
